// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function make(x) {
  return /* Queue */{
          _0: x,
          _1: /* [] */0
        };
}

function enqueue(x, y) {
  if (!x) {
    return /* Queue */{
            _0: y,
            _1: /* [] */0
          };
  }
  var b = x._1;
  var a = x._0;
  if (b) {
    return /* Queue */{
            _0: a,
            _1: List.append(b, {
                  hd: y,
                  tl: /* [] */0
                })
          };
  } else {
    return /* Queue */{
            _0: a,
            _1: {
              hd: y,
              tl: /* [] */0
            }
          };
  }
}

function dequeue(x) {
  if (!x) {
    return [
            undefined,
            /* Empty */0
          ];
  }
  var match = x._1;
  var a = x._0;
  if (match) {
    return [
            Caml_option.some(a),
            /* Queue */{
              _0: match.hd,
              _1: match.tl
            }
          ];
  } else {
    return [
            Caml_option.some(a),
            /* Empty */0
          ];
  }
}

function getFront(x) {
  if (x) {
    return Caml_option.some(x._0);
  }
  
}

function length(x) {
  if (!x) {
    return 0;
  }
  var b = x._1;
  if (b) {
    return 1 + List.length(b) | 0;
  } else {
    return 1;
  }
}

var queue = /* Queue */{
  _0: "0",
  _1: /* [] */0
};

var queue$1 = enqueue(queue, "1");

var queue$2 = enqueue(queue$1, "2");

console.log(queue$2);

console.log("<<<<<<<<<<");

var match = dequeue(queue$2);

var queue$3 = match[1];

var first = match[0];

console.log(first);

console.log(queue$3);

console.log("<<<<<<<<<<");

console.log(getFront(queue$3));

console.log("<<<<<<<<<<");

console.log(length(queue$3));

exports.make = make;
exports.enqueue = enqueue;
exports.dequeue = dequeue;
exports.getFront = getFront;
exports.length = length;
exports.first = first;
exports.queue = queue$3;
/* queue Not a pure module */
